
replicas: 1

image: "docker.elastic.co/logstash/logstash"
imageTag: "8.5.1"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

logstashConfig:
  logstash.yml: |
    http.host: 0.0.0.0
    http.port: 9600
    # xpack.monitoring.enabled: false # version logstash8.9.0 opensearch not plugin 
    # pipeline.ecs_compatibility: disabled
    pipeline.workers: 1
    pipeline.batch.size: 50
    pipeline.batch.delay: 10
  pipelines.yaml: |
    - pipeline.id: sglog-pipeline-id
      path.config: "/usr/share/logstash/pipeline/sglog-pipeline.conf"
    # - pipeline.id: sglog-pipeline-id
    #   path.config: "/usr/share/logstash/pipeline/fwlog-pipeline.conf"
logstashPipeline:
  lglog-pipeline.conf: |
    input {
      beats {
        port => 5044
        interval => 30
      }
    }

    filter {}

    output { 
      opensearch {
        hosts  => "https://opensearch-cluster-master:9200"
        user   => "admin"
        password  => "password_opensearch"
        index  => "sglog*"
        action  => "create"
        ssl_certificate_verification  => false
        }
    }

extraContainers:
  - name: logstash-exporter
    image: "logstash-exporter:v1.8.3" # check version on helmchart
    imagePullPolicy: IfNotPresent
    env:
    - name: LOGTASH_URL
      value: "http://localhost:9600"
    - name: PORT
      value: "9198"
    - name: HTTP_TIMEOUT
      value: "60s"
    - name: HTTP_INSECURE
      value: "false"
    ports:
    - name: http
      containerPort: 9198

logstashJavaOpts: "-Xmx256m -Xms256m"

resources:
  requests:
    cpu: "100m"
    memory: "512Mi"
  limits:
    cpu: "1000m"
    memory: "512Mi"

antiAffinity: "soft"

nodeSelector:
  networklogging: enabled

service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: exporter
      port: 9198
      protocol: TCP
      targetPort: 9198


